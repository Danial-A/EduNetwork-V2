[{"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js":"1","D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js":"2","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js":"3","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js":"4","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js":"5","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js":"6","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js":"7","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js":"8","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js":"9","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js":"10","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js":"11","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js":"12","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js":"13","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js":"14","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js":"15","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js":"16","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js":"17","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js":"18","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js":"19","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js":"20","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js":"21","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js":"22","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js":"23","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js":"24","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js":"25","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js":"26","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js":"27","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js":"28","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js":"29","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js":"30","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js":"31","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"32","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js":"33","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js":"34","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"35","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"36","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js":"37","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js":"38","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js":"39","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js":"40","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js":"41","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js":"42","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js":"43","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js":"44","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js":"45","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js":"46","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\GroupPage.js":"47","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js":"48","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js":"49","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js":"50","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"51","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js":"52","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js":"53","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js":"54","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js":"55","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"56","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"57","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js":"58","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js":"59","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js":"60","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js":"61","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js":"62","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js":"63","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\YT-Data-API-Result.js":"64","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Search.js":"65","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\YoutubeSearchPage.js":"66","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Api.js":"67"},{"size":258,"mtime":1613573430499,"results":"68","hashOfConfig":"69"},{"size":700,"mtime":1608237100981,"results":"70","hashOfConfig":"69"},{"size":1182,"mtime":1607968047893,"results":"71","hashOfConfig":"69"},{"size":966,"mtime":1608237089757,"results":"72","hashOfConfig":"69"},{"size":3384,"mtime":1608313559853,"results":"73","hashOfConfig":"69"},{"size":1526,"mtime":1608315838783,"results":"74","hashOfConfig":"69"},{"size":359,"mtime":1607953543421,"results":"75","hashOfConfig":"69"},{"size":599,"mtime":1607965820377,"results":"76","hashOfConfig":"69"},{"size":10548,"mtime":1609011681367,"results":"77","hashOfConfig":"69"},{"size":5161,"mtime":1608415868828,"results":"78","hashOfConfig":"69"},{"size":235,"mtime":1608066428756,"results":"79","hashOfConfig":"69"},{"size":2993,"mtime":1608796909370,"results":"80","hashOfConfig":"69"},{"size":4141,"mtime":1613825991372,"results":"81","hashOfConfig":"69"},{"size":843,"mtime":1608138611051,"results":"82","hashOfConfig":"69"},{"size":1075,"mtime":1608451793424,"results":"83","hashOfConfig":"69"},{"size":1231,"mtime":1608410127639,"results":"84","hashOfConfig":"69"},{"size":942,"mtime":1608412357013,"results":"85","hashOfConfig":"69"},{"size":1175,"mtime":1608460676807,"results":"86","hashOfConfig":"69"},{"size":2946,"mtime":1608826680320,"results":"87","hashOfConfig":"69"},{"size":2145,"mtime":1608999274275,"results":"88","hashOfConfig":"69"},{"size":948,"mtime":1609000818932,"results":"89","hashOfConfig":"69"},{"size":258,"mtime":1613573430499,"results":"90","hashOfConfig":"91"},{"size":807,"mtime":1613930332709,"results":"92","hashOfConfig":"91"},{"size":599,"mtime":1607965820377,"results":"93","hashOfConfig":"91"},{"size":3028,"mtime":1613849693532,"results":"94","hashOfConfig":"91"},{"size":942,"mtime":1608412357013,"results":"95","hashOfConfig":"91"},{"size":10586,"mtime":1613898791241,"results":"96","hashOfConfig":"91"},{"size":5583,"mtime":1613934277400,"results":"97","hashOfConfig":"91"},{"size":966,"mtime":1608237089757,"results":"98","hashOfConfig":"91"},{"size":3384,"mtime":1608313559853,"results":"99","hashOfConfig":"91"},{"size":359,"mtime":1607953543421,"results":"100","hashOfConfig":"91"},{"size":1415,"mtime":1613934340200,"results":"101","hashOfConfig":"91"},{"size":843,"mtime":1608138611051,"results":"102","hashOfConfig":"91"},{"size":3991,"mtime":1613935262375,"results":"103","hashOfConfig":"91"},{"size":1677,"mtime":1613847268104,"results":"104","hashOfConfig":"91"},{"size":1298,"mtime":1613933052046,"results":"105","hashOfConfig":"91"},{"size":1182,"mtime":1607968047893,"results":"106","hashOfConfig":"91"},{"size":1526,"mtime":1608315838783,"results":"107","hashOfConfig":"91"},{"size":3063,"mtime":1613934762454,"results":"108","hashOfConfig":"91"},{"size":2145,"mtime":1608999274275,"results":"109","hashOfConfig":"91"},{"size":602,"mtime":1613935373445,"results":"110","hashOfConfig":"91"},{"size":175,"mtime":1613930224983,"results":"111","hashOfConfig":"91"},{"size":258,"mtime":1613573430499,"results":"112","hashOfConfig":"113"},{"size":938,"mtime":1614012131124,"results":"114","hashOfConfig":"113"},{"size":944,"mtime":1614506955186,"results":"115","hashOfConfig":"113"},{"size":3075,"mtime":1614184084711,"results":"116","hashOfConfig":"113"},{"size":175,"mtime":1613930224983,"results":"117","hashOfConfig":"113"},{"size":599,"mtime":1607965820377,"results":"118","hashOfConfig":"113"},{"size":5583,"mtime":1614183908970,"results":"119","hashOfConfig":"113"},{"size":9745,"mtime":1614183702626,"results":"120","hashOfConfig":"113"},{"size":1298,"mtime":1613933052046,"results":"121","hashOfConfig":"113"},{"size":1182,"mtime":1607968047893,"results":"122","hashOfConfig":"113"},{"size":359,"mtime":1607953543421,"results":"123","hashOfConfig":"113"},{"size":5167,"mtime":1614513122286,"results":"124","hashOfConfig":"113"},{"size":843,"mtime":1608138611051,"results":"125","hashOfConfig":"113"},{"size":1789,"mtime":1614232067808,"results":"126","hashOfConfig":"113"},{"size":6682,"mtime":1614613474921,"results":"127","hashOfConfig":"113"},{"size":3096,"mtime":1614512756280,"results":"128","hashOfConfig":"113"},{"size":966,"mtime":1608237089757,"results":"129","hashOfConfig":"113"},{"size":3384,"mtime":1608313559853,"results":"130","hashOfConfig":"113"},{"size":1526,"mtime":1608315838783,"results":"131","hashOfConfig":"113"},{"size":2128,"mtime":1614110989428,"results":"132","hashOfConfig":"113"},{"size":717,"mtime":1614110775771,"results":"133","hashOfConfig":"113"},{"size":1342,"mtime":1614012158807,"results":"134","hashOfConfig":"113"},{"size":1839,"mtime":1614015883393,"results":"135","hashOfConfig":"113"},{"size":864,"mtime":1614015708625,"results":"136","hashOfConfig":"113"},{"size":283,"mtime":1614183075215,"results":"137","hashOfConfig":"113"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j23oqp",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"142"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"142"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"142"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"142"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"142"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"142"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"1qpqgqm",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"190"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"190"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"190"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"190"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"190"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"rexwww",{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"236"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"236"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"236"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"236"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"236"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"236"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"236"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"236"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"236"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"236"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"236"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js",[],["296","297"],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js",["298"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './team.css'\r\nimport {Container, Row, Col, Card} from 'react-bootstrap'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faFacebook, faTwitter, faGithub,faInstagram} from '@fortawesome/free-brands-svg-icons'\r\n\r\nfunction TeamSection() {\r\n    return (\r\n        <div className=\"card-container\" style = {{backgroundColor : \"#fff\"}}>\r\n        <Container  className= \"team-container\" id = \"about\">\r\n            <Row>\r\n               \r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Danial Ahmad</Card.Title>\r\n                    <Card.Text className = \"card-information\">\r\n                        <pre>Full Stack Developer</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Awais Bin Saqib</Card.Title>\r\n                    <Card.Text className = \"card-text\">\r\n                        <pre>Data Analyst</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><a><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></a></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSection\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js",["299"],"import React from 'react'\r\nimport './footer.css'\r\nfunction Footer() {\r\n    return (\r\n        <div style = {{backgroundColor:\"white\"}}>\r\n            <footer className = \"footer-section\">\r\n           <p> &copy; {new Date().getFullYear()} Copyright: <a href=\"#\"> EduNetwork.com </a></p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js",["300"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        confirmpassword: '',\r\n        dob:''\r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        setRedirect(true);\r\n        axios.post('http://localhost:5000/users/sign-up',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n        onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js",["301"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.get('http://localhost:5000/posts');\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js",["302","303"],"import React, {useState,useEffect,useRef} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './create-post.css'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nfunction UserPost(TotalPosts) {\r\n\r\n    const {totalPosts, setPosts} = useState(TotalPosts);\r\n\r\n    const initialValues = {\r\n        title: '',\r\n        body: '',\r\n        username: \"Danial\"\r\n    }\r\n    const onSubmit = values =>{\r\n        axios.post('http://localhost:5000/posts/add', values)\r\n        .then(res =>{\r\n            window.alert(\"Post Added!\");\r\n            setPosts([...totalPosts])\r\n        })\r\n        .catch(err =>{ console.log(\"Error: \"+err)})\r\n        console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('This field is required..'),\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n            <h3 style = {{color:'white'}}>Create a new post..</h3>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col post-heading\">\r\n                    <label htmlFor=\"postheading\" style= {{color:'white'}}>Post Heading:</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" style = {{width: \"100%\"}}\r\n                        placeholder =\"Enter the post title...\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.title}\r\n                    />\r\n                    {formik.errors.heading && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.heading}</p></div> : null}\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"post-body\">\r\n                        <label htmlFor=\"body\" style= {{color:'white'}}>Post Body: </label>\r\n                        <textarea name=\"body\" id=\"body\" rows=\"6\" \r\n                        placeholder = \"Enter the post description....\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.body}\r\n                        />\r\n                        {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-post-button\">\r\n                    <button type = \"submit\">Add Post!</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPost\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js",["304"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport DisplayComments from './comments-display'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: 'Danial',\r\n        comment: ''\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        comment: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n        values.username = 'Danial'\r\n         axios.post(`http://localhost:5000/comments/add/${postid}`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"comments-section\">\r\n            <DisplayComments postid = {postid}/>\r\n        </div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid black\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control\" name = \"comment\" id = \"comment\"\r\n                    value = {formik.values.comment} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.comment && formik.touched.comment ? <div ><p style = {{color: 'crimson'}}>{formik.errors.comment}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\", textAlign : \"center\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js",["305"],"import userEvent from '@testing-library/user-event'\r\nimport Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nimport './comment.css'\r\nfunction DisplayComments(postid) {\r\n    let [comments, setComments] = useState([])\r\n    Axios.get(`http://localhost:5000/comments/${postid}`)\r\n    .then(comment => {\r\n        setComments(comment)\r\n        console.log(comments)\r\n    })\r\n    .catch(err=> console.log(err))\r\n    return (\r\n        <div>\r\n           <pre>Comments</pre>\r\n           {\r\n               \r\n               (comments.length > 0 ) ? (comments.map(com =>(\r\n                <div className=\"comment\">\r\n                     <pre>{com.username}</pre>\r\n                     <p>{com.comment}</p>\r\n                     <pre>Added: {moment(com.createdAt).fromNow()}</pre>\r\n                </div>\r\n            ))) : <p>No Comments</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js",[],["306","307"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js",["308"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:5000/posts/user/posts', {\"author\": \"dani123\"});\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js",["309","310"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:5000/users/register',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       // onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js",["311","312"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js",["313"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js",["314"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["315","316"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js",["317"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["318","319"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport './UserInformation.css'\r\n\r\nfunction UserInformation() {\r\n    const user = Cookies.get('user')\r\n    const [User,setUser] = useState({})\r\n    useEffect(()=>{\r\n            async function getUserInfo(){\r\n            const UserInformation =  await axios.get(`http://localhost:5000/users/${user}`)\r\n            setUser(UserInformation.data)\r\n        }\r\n        getUserInfo()\r\n        \r\n    }, [])\r\n    return (\r\n        <div className = \"user-information-section\">\r\n            <div className =\"user-information-heading\"> \r\n                <h3>User Information</h3>\r\n            </div>\r\n            <div className=\"user-information-display\">\r\n                <ul>\r\n                    <li><FontAwesomeIcon icon = {faUser} className = \"icon\"/>Name: <pre> {User.firstname} {User.lastname}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Username:<pre> {User.username}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faEnvelope} className = \"icon\"/>Email:<pre> {User.emailid}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faCalendar} className = \"icon\"/>DOB:<pre> 23-08-1997</pre></li>\r\n                   \r\n                </ul>\r\n            </div>\r\n            <div className=\"edit-btn\">\r\n                <button>Edit Profile Information</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js",["320","321"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js",["322"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js",["323","324","325","326"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js",[],["327","328"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js",["329"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:5000/posts/user/posts', {\"author\": Cookies.get('username')});\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\GroupPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js",["330","331"],"import React, {useState} from 'react'\r\nimport './signin.css'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { Container, Col, Row, Form, Button} from 'react-bootstrap'\r\nimport {useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\nfunction SignIn() {\r\n\r\n    const [loggedIn,setLoggedIn] = useState(false)\r\n    const[user,setUser] = useState({})\r\n    const initialValues = {\r\n        username : '',\r\n        password: ''\r\n    }\r\n\r\n    const history = useHistory();\r\n    function redirectUser(){\r\n        if(loggedIn){\r\n            history.push('/Home')\r\n        }else return null\r\n    }\r\n\r\n  const onSubmit = (values, onSubmitProps)=>{\r\n    axios.post('http://localhost:5000/users/login', values)\r\n    .then(res =>{\r\n        console.log(res.data)\r\n        if(res.status === 200) {\r\n            axios.post(`http://localhost:5000/users/${res.data.userid}`)\r\n            .then(user=> console.log(user))\r\n            .catch(err=> console.log(err))\r\n            setLoggedIn(true)\r\n            Cookies.set('token', res.data.token)\r\n            Cookies.set('user', res.data.userid)\r\n            Cookies.set('username', res.data.username)\r\n        }\r\n        redirectUser()\r\n        \r\n    })\r\n    .catch(err=> console.log(err))\r\n    onSubmitProps.resetForm()\r\n  }\r\n\r\n\r\n\r\n  const validationSchema =Yup.object({\r\n    password: Yup.string().required('This field is required..'),\r\n    username: Yup.string().required('This field is required..')\r\n  })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n    return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <Container className = \"signin-container\">\r\n                    <Row className = \"signin-row\">\r\n                    <Col sm = {6}>\r\n                    <div className =\"signin-form-section signin\">\r\n                        <Form onSubmit = {formik.handleSubmit}>\r\n                        <h3 className = \"text-light text-center\">Log into your account!</h3>\r\n                            <Row>\r\n                                <Col md= {6} className = \"form-fields\">\r\n                                    <Form.Label className = \"text-light form-label\">Enter your username:</Form.Label>\r\n                                </Col>\r\n                                <Col md= {6} className = \"form-fields\">\r\n                                    <Form.Control type = \"text\" \r\n                                    name = \"username\" \r\n                                    id  = \"username\" \r\n                                    onChange = {formik.handleChange} \r\n                                    onBlur = {formik.handleBlur} \r\n                                    value = {formik.values.username} />\r\n                                    {formik.errors.username && formik.touched.username ? <div ><p style = {{color: 'crimson'}}>{formik.errors.username}</p></div> : null}\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className = \"section-divider\">\r\n                                <Col md= {6} className = \"form-fields\">\r\n                                    <Form.Label className = \"text-light form-label\">Enter your password:</Form.Label>\r\n                                </Col>\r\n                                <Col md= {6} className = \"form-fields\">\r\n                                    <Form.Control type = \"password\" name = \"password\" id = \"password\" value ={formik.values.password} \r\n                                        onChange = {formik.handleChange}\r\n                                        onBlue = {formik.handleBlur}\r\n\r\n                                    />\r\n                                    {formik.errors.password && formik.touched.password ? <div style = {{color: 'crimson'}}><p>{formik.errors.password}</p></div> : null}\r\n                                </Col>\r\n                            </Row>\r\n                          <Row>\r\n                            <Col md = {6} >\r\n                            <Form.Group controlId=\"formBasicCheckbox\" >\r\n                                <Form.Check type=\"checkbox\"  label=\"Remember Me.\"  className = \"text-light\" name = \"toggle\"\r\n                                    onChange = {formik.handleChange}\r\n                                    value = {formik.values.toggle}\r\n                                />\r\n                            </Form.Group>\r\n                            </Col>\r\n                            <Col md= {6}>\r\n                                <Link style = {{color:'white', textDecoration :'none'}}>Forgot password?</Link>\r\n                        \r\n                            </Col>\r\n                \r\n                          </Row>\r\n                          <Row className = \"login-btn\">\r\n                            <Button variant = \"primary\" type = \"submit\" onClick = {redirectUser()}>Log In</Button>\r\n                          </Row>\r\n                        </Form>\r\n                    </div>\r\n                </Col>\r\n                        <Col sm = {6}  className = \"signin\">\r\n                            <img src=\"/images/signin.svg\" alt=\"\"/>\r\n                        </Col>\r\n                        \r\n                    </Row>\r\n                </Container>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js",["332","333"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:5000/users/register',values)\r\n        .then((res)=>{\r\n            window.alert('User registered')\r\n            console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       // onSubmitProps.resetForm()\r\n       console.log(values)\r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        // confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n        //     is:val => (val && val.length > 0 ? true : false),\r\n        //     then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        // })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js",["334"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js",["335"],"import React, {useState,useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Axios from 'axios'\r\nimport Tippy from '@tippy.js/react'\r\nimport { faThumbsUp, faComment, faShare, faSave, faTrash,faEdit,faArchive } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport PostComment from '../comments/comment'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './post.css'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\n\r\nfunction Post({posts, loading}) {\r\n    const username = Cookies.get('username')\r\n    const [liked, setLiked] = useState(false)\r\n\r\n    //Handle close/open Modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    \r\n    const checkLike = (postid)=>{\r\n        axios.post(`http://localhost:5000/posts/${postid}/like`,{username})\r\n        .then(response=> {\r\n\r\n            if(response.status === 200){\r\n                // setLiked(true)\r\n                if(response.data === 'liked') {\r\n                    setLiked(true)\r\n                   \r\n                }\r\n                else {\r\n                    setLiked(false)\r\n                }\r\n            }\r\n        })\r\n        .catch(err=> console.log(err))\r\n    }\r\n\r\n\r\n    const DeletePost = (postid)=>{\r\n        Axios.delete(`http://localhost:5000/posts/${postid}`)\r\n        .then(res=>{\r\n            window.alert(\"Post Deleted\");\r\n            \r\n            console.log(res.data)\r\n        })\r\n        .catch(err=>{console.log(err)})\r\n        }\r\n\r\n    if(loading){\r\n        return <h2>Loading...</h2>\r\n    }\r\n\r\n  \r\n    return (\r\n        <div className=\"container-fluid posts-section\">\r\n            {\r\n                posts.map(post=>(\r\n                    \r\n                    <div key = {post._id} className=\"post-container container\">\r\n                      <div className=\"row user-info-row\">\r\n                        <div className=\"col-md-6\">\r\n                           <span className = \"user-heading\">User:</span> {post.author}\r\n                        </div>\r\n                        <div className=\"col-md-6 created-at\">\r\n                            <pre><strong>Created:</strong> {moment(post.createdAt).fromNow()}</pre>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\" style = {{justifyContent:\"space-between\"}}>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"post-heading-section\">\r\n                                <h4>{post.title}</h4>\r\n                            </div>\r\n                        </div> \r\n                        <div className=\"co-md-4\">\r\n                        <div className=\"delete-icons-row\">\r\n                            <Link ><FontAwesomeIcon  icon = {faTrash} onClick = {()=>DeletePost(post._id)}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faEdit} onClick = {handleShow} /></Link>\r\n                            <Link><FontAwesomeIcon icon = {faArchive}/></Link>\r\n                    </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"post-body\">\r\n                                <p>{post.body}</p>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6 like-icons-row\">\r\n                            <Tippy content = {`${post.likes.length} ${post.likes.length > 1 ? ('Likes'):('Like')}`}><Link><FontAwesomeIcon icon = {faThumbsUp} onClick = {()=> checkLike(post._id)} className = {`${liked ? ('liked'): ('disliked')}`}/></Link></Tippy>\r\n                            <Tippy content = {`${post.comments.length} ${post.comments.length > 1 ? ('Comments'):('Comment')}`}><Link><FontAwesomeIcon icon = {faComment}/></Link></Tippy>\r\n                            <Link><FontAwesomeIcon icon = {faShare}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faSave}/></Link>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      <PostComment postid = {post._id}/>\r\n                    </div>\r\n                    \r\n                ))\r\n            }\r\n            <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Modal heading</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleClose}>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["336"],"import React,{useState,useEffect} from 'react'\r\nimport '../../pages/UserProfile.css'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faThumbsUp, faUsers, faTasks} from '@fortawesome/free-solid-svg-icons'\r\nimport {Link } from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nfunction ProfileInformation() {\r\n\r\n    const [posts, setPosts] = useState([])\r\n    useEffect(()=>{\r\n        axios.post('http://localhost:5000/posts/user/posts', {author: Cookies.get('username')})\r\n        .then(posts=> {\r\n            console.log(posts)\r\n            setPosts(posts)\r\n        })\r\n        .catch(err => console.log(err))\r\n    },[])\r\n    return (\r\n        <div className=\"user-info\">\r\n            <div className=\"user-heading\"> \r\n                <h3>Profile Information</h3>\r\n            </div>\r\n            <div className=\"information-section\">\r\n                <ul>\r\n                    <li><Link><FontAwesomeIcon icon = {faEdit} className = \"icon\"/>Posts {(posts.length)}</Link></li>\r\n                    <li><Link><FontAwesomeIcon icon = {faThumbsUp} className = \"icon\"/>Likes </Link></li>\r\n                    <li><Link to = '/group'><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Groups</Link></li>\r\n                </ul>\r\n             <div className=\"groups-section\">\r\n                <ul className=\"group-names\">\r\n                    <li><Link>Group 1 with a long name for testing purpose to check what kind of space it takes</Link></li>\r\n                    <li><Link>Group 2</Link></li>\r\n                    <li><Link>Group 3</Link></li>\r\n                    <li><Link>Group 4</Link></li>\r\n                </ul>\r\n             </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["337"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js",["338","339"],"import React, {useState,useEffect,useRef} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './create-post.css'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nfunction UserPost(TotalPosts) {\r\n\r\n    const {totalPosts, setPosts} = useState(TotalPosts);\r\n    // console.log(Cookies.get('username'))\r\n    const initialValues = {\r\n        title: '',\r\n        body: '',\r\n        author: Cookies.get('username'),\r\n        postType: 'profile'\r\n    }\r\n    const onSubmit = values =>{\r\n        axios.post('http://localhost:5000/posts/add', values)\r\n        .then(res =>{\r\n            // window.alert(\"Post Added!\");\r\n            console.log(res)\r\n            setPosts([...totalPosts])\r\n        })\r\n        .catch(err =>{ console.log(\"Error: \"+err)})\r\n        console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('This field is required..'),\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n            <h3 style = {{color:'white'}}>Create a new post..</h3>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col post-heading\">\r\n                    <label htmlFor=\"postheading\" style= {{color:'white'}}>Post Heading:</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" style = {{width: \"100%\"}}\r\n                        placeholder =\"Enter the post title...\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.title}\r\n                    />\r\n                    {formik.errors.heading && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.heading}</p></div> : null}\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"post-body\">\r\n                        <label htmlFor=\"body\" style= {{color:'white'}}>Post Body: </label>\r\n                        <textarea name=\"body\" id=\"body\" rows=\"6\" \r\n                        placeholder = \"Enter the post description....\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.body}\r\n                        />\r\n                        {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-post-button\">\r\n                    <button type = \"submit\">Add Post!</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPost\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js",["340"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js",["341"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport DisplayComments from './comments-display'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: Cookies.get('username'),\r\n        body: ''\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n         axios.post(`http://localhost:5000/posts/${postid}/comment/add`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"comments-section\">\r\n            <DisplayComments postid = {postid}/>\r\n        </div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid black\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control comment-input\" name = \"body\" id = \"body\"\r\n                    value = {formik.values.body} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.body && formik.touched.body ? <div ><p style = {{color: 'crimson'}}>{formik.errors.body}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js",["342","343","344","345"],"import userEvent from '@testing-library/user-event'\r\nimport Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nimport './comment.css'\r\nfunction DisplayComments(postid) {\r\n    // // const [comments, setComments] = useState([])\r\n    // function getComments(){\r\n    //     Axios.get(`http://localhost:5000/posts/${postid}/comments`)\r\n    //     .then(comments => {\r\n    //     //setComments(comment)\r\n    //     console.log(comments)\r\n    // })\r\n    // .catch(err=> console.log(err))\r\n    // }\r\n    //  getComments()\r\n    // console.log(postid)\r\n    return (\r\n        <div>\r\n           <pre>Comments</pre>\r\n          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n",["346","347"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\YT-Data-API-Result.js",["348","349"],"import React, {useState} from 'react'\r\nimport { Modal, Button} from 'react-bootstrap'\r\nimport SearchComponent from './Search'\r\nimport './yt.css'\r\n\r\n\r\nfunction YTPage() {\r\n    const [show,setShow] = useState(false)\r\n    const handleClose = () => setShow(false)\r\n    const handleShow = () => setShow(true)\r\n    return (\r\n        <div>\r\n            <Button variant=\"primary\" onClick={handleShow}>\r\n                Launch demo modal\r\n            </Button>\r\n        \r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Modal heading</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/9CyObwMSHOU\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                <Button variant=\"primary\" onClick={handleClose}>\r\n                    Save Changes\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n          </div>\r\n      );\r\n}\r\n\r\nexport default YTPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Search.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\YoutubeSearchPage.js",["350","351","352","353"],"import React, {useState} from 'react'\r\nimport SearchComponent from '../components/YT-Data/Search'\r\nimport YTPage from '../components/YT-Data/YT-Data-API-Result'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport YoutubeApi from '../components/YT-Data/Api'\r\n\r\n\r\nfunction YoutubeSearchPage() {\r\n\r\n    const [videoMetaInfo, setVideoMetaInfo] = useState([])\r\n    const [selectedVideoId, setSelectedVideoId] = useState(null)\r\n\r\n    const onSearch = async (keyword) =>{\r\n        const response = await YoutubeApi.get(\"/search\",{\r\n            params:{\r\n                q:keyword\r\n            }\r\n        })\r\n        console.log(response)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavigationBar/>\r\n            <SearchComponent onSearch = {onSearch}/>\r\n            <YTPage/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YoutubeSearchPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Api.js",[],{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","severity":1,"message":"359","line":52,"column":38,"nodeType":"360","endLine":52,"endColumn":41},{"ruleId":"358","severity":1,"message":"361","line":7,"column":61,"nodeType":"360","endLine":7,"endColumn":73},{"ruleId":"362","severity":1,"message":"363","line":168,"column":25,"nodeType":"360","endLine":168,"endColumn":76},{"ruleId":"364","severity":1,"message":"365","line":1,"column":37,"nodeType":"366","messageId":"367","endLine":1,"endColumn":43},{"ruleId":"364","severity":1,"message":"368","line":1,"column":25,"nodeType":"366","messageId":"367","endLine":1,"endColumn":34},{"ruleId":"364","severity":1,"message":"365","line":1,"column":35,"nodeType":"366","messageId":"367","endLine":1,"endColumn":41},{"ruleId":"364","severity":1,"message":"369","line":2,"column":9,"nodeType":"366","messageId":"367","endLine":2,"endColumn":15},{"ruleId":"364","severity":1,"message":"370","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":17},{"ruleId":"354","replacedBy":"371"},{"ruleId":"356","replacedBy":"372"},{"ruleId":"364","severity":1,"message":"365","line":1,"column":37,"nodeType":"366","messageId":"367","endLine":1,"endColumn":43},{"ruleId":"364","severity":1,"message":"373","line":17,"column":22,"nodeType":"366","messageId":"367","endLine":17,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":169,"column":25,"nodeType":"360","endLine":169,"endColumn":76},{"ruleId":"364","severity":1,"message":"374","line":16,"column":11,"nodeType":"366","messageId":"367","endLine":16,"endColumn":15},{"ruleId":"364","severity":1,"message":"375","line":16,"column":16,"nodeType":"366","messageId":"367","endLine":16,"endColumn":23},{"ruleId":"358","severity":1,"message":"359","line":52,"column":38,"nodeType":"360","endLine":52,"endColumn":41},{"ruleId":"358","severity":1,"message":"361","line":7,"column":61,"nodeType":"360","endLine":7,"endColumn":73},{"ruleId":"364","severity":1,"message":"376","line":4,"column":39,"nodeType":"366","messageId":"367","endLine":4,"endColumn":46},{"ruleId":"364","severity":1,"message":"377","line":6,"column":8,"nodeType":"366","messageId":"367","endLine":6,"endColumn":15},{"ruleId":"364","severity":1,"message":"378","line":16,"column":19,"nodeType":"366","messageId":"367","endLine":16,"endColumn":27},{"ruleId":"364","severity":1,"message":"365","line":3,"column":37,"nodeType":"366","messageId":"367","endLine":3,"endColumn":43},{"ruleId":"379","severity":1,"message":"380","line":19,"column":8,"nodeType":"381","endLine":19,"endColumn":10,"suggestions":"382"},{"ruleId":"364","severity":1,"message":"368","line":1,"column":25,"nodeType":"366","messageId":"367","endLine":1,"endColumn":34},{"ruleId":"364","severity":1,"message":"365","line":1,"column":35,"nodeType":"366","messageId":"367","endLine":1,"endColumn":41},{"ruleId":"364","severity":1,"message":"369","line":2,"column":9,"nodeType":"366","messageId":"367","endLine":2,"endColumn":15},{"ruleId":"364","severity":1,"message":"370","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":17},{"ruleId":"364","severity":1,"message":"383","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":13},{"ruleId":"364","severity":1,"message":"384","line":3,"column":16,"nodeType":"366","messageId":"367","endLine":3,"endColumn":24},{"ruleId":"364","severity":1,"message":"385","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":14},{"ruleId":"354","replacedBy":"386"},{"ruleId":"356","replacedBy":"387"},{"ruleId":"364","severity":1,"message":"365","line":1,"column":37,"nodeType":"366","messageId":"367","endLine":1,"endColumn":43},{"ruleId":"364","severity":1,"message":"374","line":16,"column":11,"nodeType":"366","messageId":"367","endLine":16,"endColumn":15},{"ruleId":"364","severity":1,"message":"375","line":16,"column":16,"nodeType":"366","messageId":"367","endLine":16,"endColumn":23},{"ruleId":"364","severity":1,"message":"373","line":17,"column":22,"nodeType":"366","messageId":"367","endLine":17,"endColumn":33},{"ruleId":"362","severity":1,"message":"363","line":161,"column":25,"nodeType":"360","endLine":161,"endColumn":76},{"ruleId":"358","severity":1,"message":"361","line":7,"column":61,"nodeType":"360","endLine":7,"endColumn":73},{"ruleId":"364","severity":1,"message":"368","line":1,"column":25,"nodeType":"366","messageId":"367","endLine":1,"endColumn":34},{"ruleId":"364","severity":1,"message":"376","line":4,"column":39,"nodeType":"366","messageId":"367","endLine":4,"endColumn":46},{"ruleId":"379","severity":1,"message":"380","line":32,"column":8,"nodeType":"381","endLine":32,"endColumn":10,"suggestions":"388"},{"ruleId":"364","severity":1,"message":"368","line":1,"column":25,"nodeType":"366","messageId":"367","endLine":1,"endColumn":34},{"ruleId":"364","severity":1,"message":"365","line":1,"column":35,"nodeType":"366","messageId":"367","endLine":1,"endColumn":41},{"ruleId":"358","severity":1,"message":"359","line":52,"column":38,"nodeType":"360","endLine":52,"endColumn":41},{"ruleId":"364","severity":1,"message":"369","line":2,"column":9,"nodeType":"366","messageId":"367","endLine":2,"endColumn":15},{"ruleId":"364","severity":1,"message":"370","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":17},{"ruleId":"364","severity":1,"message":"383","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":13},{"ruleId":"364","severity":1,"message":"384","line":3,"column":16,"nodeType":"366","messageId":"367","endLine":3,"endColumn":24},{"ruleId":"364","severity":1,"message":"385","line":4,"column":8,"nodeType":"366","messageId":"367","endLine":4,"endColumn":14},{"ruleId":"354","replacedBy":"389"},{"ruleId":"356","replacedBy":"390"},{"ruleId":"364","severity":1,"message":"391","line":3,"column":8,"nodeType":"366","messageId":"367","endLine":3,"endColumn":23},{"ruleId":"392","severity":1,"message":"393","line":22,"column":17,"nodeType":"360","endLine":22,"endColumn":227},{"ruleId":"364","severity":1,"message":"394","line":10,"column":12,"nodeType":"366","messageId":"367","endLine":10,"endColumn":25},{"ruleId":"364","severity":1,"message":"395","line":10,"column":27,"nodeType":"366","messageId":"367","endLine":10,"endColumn":43},{"ruleId":"364","severity":1,"message":"396","line":11,"column":12,"nodeType":"366","messageId":"367","endLine":11,"endColumn":27},{"ruleId":"364","severity":1,"message":"397","line":11,"column":29,"nodeType":"366","messageId":"367","endLine":11,"endColumn":47},"no-native-reassign",["398"],"no-negated-in-lhs",["399"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Formik' is defined but never used.","'userEvent' is defined but never used.",["398"],["399"],"'setRedirect' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'faTasks' is defined but never used.","'Cookies' is defined but never used.","'setLiked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["400"],"'Axios' is defined but never used.","'useState' is defined but never used.","'moment' is defined but never used.",["398"],["399"],["401"],["398"],["399"],"'SearchComponent' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'videoMetaInfo' is assigned a value but never used.","'setVideoMetaInfo' is assigned a value but never used.","'selectedVideoId' is assigned a value but never used.","'setSelectedVideoId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"402","fix":"403"},{"desc":"402","fix":"404"},"Update the dependencies array to be: [user]",{"range":"405","text":"406"},{"range":"407","text":"406"},[673,675],"[user]",[1020,1022]]