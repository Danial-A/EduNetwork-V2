[{"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js":"1","D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js":"2","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js":"3","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js":"4","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js":"5","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js":"6","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js":"7","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js":"8","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js":"9","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js":"10","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js":"11","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js":"12","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js":"13","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js":"14","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js":"15","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js":"16","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js":"17","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js":"18","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js":"19","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js":"20","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js":"21","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js":"22","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js":"23","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js":"24","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js":"25","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js":"26","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js":"27","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js":"28","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js":"29","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js":"30","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js":"31","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"32","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js":"33","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js":"34","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"35","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"36","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js":"37","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js":"38","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js":"39","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js":"40","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js":"41","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js":"42","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js":"43","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js":"44","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js":"45","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js":"46","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js":"47","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js":"48","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js":"49","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js":"50","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js":"51","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js":"52","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js":"53","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js":"54","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js":"55","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js":"56","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js":"57","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js":"58","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js":"59","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js":"60","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js":"61","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js":"62","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\YT-Data-API-Result.js":"63","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Search.js":"64","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\YoutubeSearchPage.js":"65","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Api.js":"66","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\postPage.js":"67","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userSearch.js":"68","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js":"69","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\GroupPage.js":"70","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\userSearch\\searchPanel.js":"71","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\messenger.js":"72","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\sidechat-panel.js":"73","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\mainchat-area.js":"74","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\editorPage.js":"75","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\utils\\LoggedIn.js":"76","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\HOC\\PrivateRoute.js":"77","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\message.js":"78","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\outputsection.js":"79","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\videosection.js":"80"},{"size":258,"mtime":1613573430499,"results":"81","hashOfConfig":"82"},{"size":700,"mtime":1608237100981,"results":"83","hashOfConfig":"82"},{"size":1182,"mtime":1607968047893,"results":"84","hashOfConfig":"82"},{"size":966,"mtime":1608237089757,"results":"85","hashOfConfig":"82"},{"size":3384,"mtime":1608313559853,"results":"86","hashOfConfig":"82"},{"size":1526,"mtime":1608315838783,"results":"87","hashOfConfig":"82"},{"size":359,"mtime":1607953543421,"results":"88","hashOfConfig":"82"},{"size":599,"mtime":1607965820377,"results":"89","hashOfConfig":"82"},{"size":10548,"mtime":1609011681367,"results":"90","hashOfConfig":"82"},{"size":5161,"mtime":1608415868828,"results":"91","hashOfConfig":"82"},{"size":235,"mtime":1608066428756,"results":"92","hashOfConfig":"82"},{"size":2993,"mtime":1608796909370,"results":"93","hashOfConfig":"82"},{"size":4141,"mtime":1613825991372,"results":"94","hashOfConfig":"82"},{"size":843,"mtime":1608138611051,"results":"95","hashOfConfig":"82"},{"size":1075,"mtime":1608451793424,"results":"96","hashOfConfig":"82"},{"size":1231,"mtime":1608410127639,"results":"97","hashOfConfig":"82"},{"size":942,"mtime":1608412357013,"results":"98","hashOfConfig":"82"},{"size":1175,"mtime":1608460676807,"results":"99","hashOfConfig":"82"},{"size":2946,"mtime":1608826680320,"results":"100","hashOfConfig":"82"},{"size":2145,"mtime":1608999274275,"results":"101","hashOfConfig":"82"},{"size":948,"mtime":1609000818932,"results":"102","hashOfConfig":"82"},{"size":258,"mtime":1613573430499,"results":"103","hashOfConfig":"104"},{"size":807,"mtime":1613930332709,"results":"105","hashOfConfig":"104"},{"size":599,"mtime":1607965820377,"results":"106","hashOfConfig":"104"},{"size":3028,"mtime":1613849693532,"results":"107","hashOfConfig":"104"},{"size":942,"mtime":1608412357013,"results":"108","hashOfConfig":"104"},{"size":10586,"mtime":1613898791241,"results":"109","hashOfConfig":"104"},{"size":5583,"mtime":1613934277400,"results":"110","hashOfConfig":"104"},{"size":966,"mtime":1608237089757,"results":"111","hashOfConfig":"104"},{"size":3384,"mtime":1608313559853,"results":"112","hashOfConfig":"104"},{"size":359,"mtime":1607953543421,"results":"113","hashOfConfig":"104"},{"size":1415,"mtime":1613934340200,"results":"114","hashOfConfig":"104"},{"size":843,"mtime":1608138611051,"results":"115","hashOfConfig":"104"},{"size":3991,"mtime":1613935262375,"results":"116","hashOfConfig":"104"},{"size":1677,"mtime":1613847268104,"results":"117","hashOfConfig":"104"},{"size":1298,"mtime":1613933052046,"results":"118","hashOfConfig":"104"},{"size":1182,"mtime":1607968047893,"results":"119","hashOfConfig":"104"},{"size":1526,"mtime":1608315838783,"results":"120","hashOfConfig":"104"},{"size":3063,"mtime":1613934762454,"results":"121","hashOfConfig":"104"},{"size":2145,"mtime":1608999274275,"results":"122","hashOfConfig":"104"},{"size":602,"mtime":1613935373445,"results":"123","hashOfConfig":"104"},{"size":175,"mtime":1613930224983,"results":"124","hashOfConfig":"104"},{"size":258,"mtime":1613573430499,"results":"125","hashOfConfig":"126"},{"size":1383,"mtime":1615650831770,"results":"127","hashOfConfig":"126"},{"size":1567,"mtime":1615463122147,"results":"128","hashOfConfig":"126"},{"size":3271,"mtime":1615646193273,"results":"129","hashOfConfig":"126"},{"size":599,"mtime":1607965820377,"results":"130","hashOfConfig":"126"},{"size":5568,"mtime":1615646176571,"results":"131","hashOfConfig":"126"},{"size":9928,"mtime":1615645652535,"results":"132","hashOfConfig":"126"},{"size":1343,"mtime":1615654312407,"results":"133","hashOfConfig":"126"},{"size":1182,"mtime":1607968047893,"results":"134","hashOfConfig":"126"},{"size":406,"mtime":1615463038742,"results":"135","hashOfConfig":"126"},{"size":5976,"mtime":1615646118521,"results":"136","hashOfConfig":"126"},{"size":843,"mtime":1608138611051,"results":"137","hashOfConfig":"126"},{"size":2893,"mtime":1615646145856,"results":"138","hashOfConfig":"126"},{"size":6785,"mtime":1615646167005,"results":"139","hashOfConfig":"126"},{"size":3010,"mtime":1615646054439,"results":"140","hashOfConfig":"126"},{"size":966,"mtime":1608237089757,"results":"141","hashOfConfig":"126"},{"size":3377,"mtime":1615381659034,"results":"142","hashOfConfig":"126"},{"size":1526,"mtime":1608315838783,"results":"143","hashOfConfig":"126"},{"size":1941,"mtime":1615646218266,"results":"144","hashOfConfig":"126"},{"size":1625,"mtime":1615560860914,"results":"145","hashOfConfig":"126"},{"size":818,"mtime":1615382066291,"results":"146","hashOfConfig":"126"},{"size":1839,"mtime":1614015883393,"results":"147","hashOfConfig":"126"},{"size":797,"mtime":1615361971331,"results":"148","hashOfConfig":"126"},{"size":283,"mtime":1614183075215,"results":"149","hashOfConfig":"126"},{"size":3978,"mtime":1615560757284,"results":"150","hashOfConfig":"126"},{"size":1892,"mtime":1615463354831,"results":"151","hashOfConfig":"126"},{"size":1159,"mtime":1615646085245,"results":"152","hashOfConfig":"126"},{"size":445,"mtime":1615446595435,"results":"153","hashOfConfig":"126"},{"size":1305,"mtime":1615381325660,"results":"154","hashOfConfig":"126"},{"size":1315,"mtime":1615662519065,"results":"155","hashOfConfig":"126"},{"size":975,"mtime":1615662695701,"results":"156","hashOfConfig":"126"},{"size":1504,"mtime":1615657208289,"results":"157","hashOfConfig":"126"},{"size":2176,"mtime":1615652264443,"results":"158","hashOfConfig":"126"},{"size":219,"mtime":1615648647195,"results":"159","hashOfConfig":"126"},{"size":591,"mtime":1615648905494,"results":"160","hashOfConfig":"126"},{"size":345,"mtime":1615651504246,"results":"161","hashOfConfig":"126"},{"size":181,"mtime":1615652191818,"results":"162","hashOfConfig":"126"},{"size":178,"mtime":1615652220996,"results":"163","hashOfConfig":"126"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j23oqp",{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"168"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"168"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"168"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"168"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"168"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"168"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},"1qpqgqm",{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"216"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"216"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"216"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"216"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"216"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"216"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},"rexwww",{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"262"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"262"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"262"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"262"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"262"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"262"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"262"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"262"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"262"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\FYP-Implementation\\40% Implementation\\01\\src\\index.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\App.js",[],["345","346"],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\teams-section\\team.js",["347"],"import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './team.css'\r\nimport {Container, Row, Col, Card} from 'react-bootstrap'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faFacebook, faTwitter, faGithub,faInstagram} from '@fortawesome/free-brands-svg-icons'\r\n\r\nfunction TeamSection() {\r\n    return (\r\n        <div className=\"card-container\" style = {{backgroundColor : \"#fff\"}}>\r\n        <Container  className= \"team-container\" id = \"about\">\r\n            <Row>\r\n               \r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Danial Ahmad</Card.Title>\r\n                    <Card.Text className = \"card-information\">\r\n                        <pre>Full Stack Developer</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n                <Col md ={6} className = \"ml-auto card-column\">\r\n                    <Card style={{ width: '18rem' }} className = \"card-main\">\r\n                    <div>\r\n                        <Card.Img variant=\"top\" src=\"images/Dp.svg\" className = \"card-image\" />\r\n                    </div>\r\n                    <Card.Body>\r\n                    <Card.Title>Awais Bin Saqib</Card.Title>\r\n                    <Card.Text className = \"card-text\">\r\n                        <pre>Data Analyst</pre>\r\n                        <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Unde, aliquam?</p>\r\n                    </Card.Text>\r\n                    <div className=\"social-links\">\r\n                        <Container >\r\n                            <Row className = \"center-text\">\r\n                                <Col><a><FontAwesomeIcon icon ={faFacebook} size = \"2x\"/></a></Col>\r\n                                <Col><FontAwesomeIcon icon ={faGithub} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faTwitter} size = \"2x\"/></Col>\r\n                                <Col><FontAwesomeIcon icon ={faInstagram} size = \"2x\"/></Col>\r\n                            </Row>\r\n                        </Container>\r\n                    </div>\r\n                    </Card.Body>\r\n                    </Card>                \r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TeamSection\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\footer-section\\footer.js",["348"],"import React from 'react'\r\nimport './footer.css'\r\nfunction Footer() {\r\n    return (\r\n        <div style = {{backgroundColor:\"white\"}}>\r\n            <footer className = \"footer-section\">\r\n           <p> &copy; {new Date().getFullYear()} Copyright: <a href=\"#\"> EduNetwork.com </a></p>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-up\\signup.js",["349"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        confirmpassword: '',\r\n        dob:''\r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        setRedirect(true);\r\n        axios.post('http://localhost:8080/users/sign-up',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n        onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\userProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserProfile.js",["350"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.get('http://localhost:8080/posts');\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\post.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\ProfileInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\Profile-Information\\UserInformation.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\create-post\\create-post.js",["351","352"],"import React, {useState,useEffect,useRef} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './create-post.css'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nfunction UserPost(TotalPosts) {\r\n\r\n    const {totalPosts, setPosts} = useState(TotalPosts);\r\n\r\n    const initialValues = {\r\n        title: '',\r\n        body: '',\r\n        username: \"Danial\"\r\n    }\r\n    const onSubmit = values =>{\r\n        axios.post('http://localhost:8080/posts/add', values)\r\n        .then(res =>{\r\n            window.alert(\"Post Added!\");\r\n            setPosts([...totalPosts])\r\n        })\r\n        .catch(err =>{ console.log(\"Error: \"+err)})\r\n        console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('This field is required..'),\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container\">\r\n            <h3 style = {{color:'white'}}>Create a new post..</h3>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                <div className=\"row\">\r\n                <div className=\"col post-heading\">\r\n                    <label htmlFor=\"postheading\" style= {{color:'white'}}>Post Heading:</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" style = {{width: \"100%\"}}\r\n                        placeholder =\"Enter the post title...\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.title}\r\n                    />\r\n                    {formik.errors.heading && formik.touched.title ? <div style = {{color: 'crimson'}}><p>{formik.errors.heading}</p></div> : null}\r\n                </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div className=\"post-body\">\r\n                        <label htmlFor=\"body\" style= {{color:'white'}}>Post Body: </label>\r\n                        <textarea name=\"body\" id=\"body\" rows=\"6\" \r\n                        placeholder = \"Enter the post description....\"\r\n                        onChange = {formik.handleChange}\r\n                        onBlur = {formik.onBlur}\r\n                        value = {formik.values.body}\r\n                        />\r\n                        {formik.errors.body && formik.touched.body ? <div style = {{color: 'crimson'}}><p>{formik.errors.body}</p></div> : null}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"add-post-button\">\r\n                    <button type = \"submit\">Add Post!</button>\r\n                </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserPost\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comment.js",["353"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport DisplayComments from './comments-display'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: 'Danial',\r\n        comment: ''\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        comment: Yup.string().required('This field is required..')\r\n    })\r\n\r\n    \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n        values.username = 'Danial'\r\n         axios.post(`http://localhost:8080/comments/add/${postid}`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n        <div className=\"comments-section\">\r\n            <DisplayComments postid = {postid}/>\r\n        </div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid black\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control\" name = \"comment\" id = \"comment\"\r\n                    value = {formik.values.comment} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.comment && formik.touched.comment ? <div ><p style = {{color: 'crimson'}}>{formik.errors.comment}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\", textAlign : \"center\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\01\\src\\components\\comments\\comments-display.js",["354"],"import userEvent from '@testing-library/user-event'\r\nimport Axios from 'axios'\r\nimport React, {useState} from 'react'\r\nimport moment from 'moment'\r\n\r\n\r\nimport './comment.css'\r\nfunction DisplayComments(postid) {\r\n    let [comments, setComments] = useState([])\r\n    Axios.get(`http://localhost:8080/comments/${postid}`)\r\n    .then(comment => {\r\n        setComments(comment)\r\n        console.log(comments)\r\n    })\r\n    .catch(err=> console.log(err))\r\n    return (\r\n        <div>\r\n           <pre>Comments</pre>\r\n           {\r\n               \r\n               (comments.length > 0 ) ? (comments.map(com =>(\r\n                <div className=\"comment\">\r\n                     <pre>{com.username}</pre>\r\n                     <p>{com.comment}</p>\r\n                     <pre>Added: {moment(com.createdAt).fromNow()}</pre>\r\n                </div>\r\n            ))) : <p>No Comments</p>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\index.js",[],["355","356"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserProfile.js",["357"],"import React, {useState, useEffect, useRef} from 'react'\r\nimport axios from 'axios'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport './UserProfile.css'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport Footer from '../components/footer-section/footer'\r\nimport Post from '../components/post-component/post'\r\nimport Pagination from '../components/post-component/pagination'\r\nimport ProfileInformation from '../components/Profile-Information/ProfileInformation'\r\nimport UserInformation from '../components/Profile-Information/UserInformation'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport UserPost from '../components/create-post/create-post'\r\n\r\n\r\nfunction UserProfile() {\r\n    \r\n    const [posts, setPosts] = useState([])\r\n    const [loading, setLoading] = useState(true);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(2);\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n  \r\n        const fetchPosts = async ()=>{\r\n            setLoading(true);\r\n            const response = await axios.post('http://localhost:8080/posts/user/posts', {\"author\": \"dani123\"});\r\n            setPosts(response.data);\r\n            setLoading(false)\r\n        }\r\n        fetchPosts()\r\n\r\n    }, []);\r\n\r\n    //Current Posts\r\n    const lastPostIndex = currentPage * postsPerPage;\r\n    const firstPostIndex = lastPostIndex - postsPerPage;\r\n    const currentPosts = posts.slice(firstPostIndex, lastPostIndex)\r\n    \r\n\r\n    const paginate = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#1c2237', height:\"auto\"}}>\r\n            <NavigationBar/>\r\n            <div className=\"cover-container\">\r\n                <div className=\"cover-image\">\r\n                    <img src=\"/images/background.jpg\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"profile-image\">\r\n                    <img src=\"/images/Dp.svg\" alt=\"\"/>\r\n                </div>\r\n            </div>\r\n            <Container fluid className = \"user-information-section\">\r\n                <Row>\r\n                    <Col  lg = {3} className = \"demo\">\r\n                        <UserInformation/>\r\n                    </Col>\r\n                        \r\n                    <Col lg = {6} className = \"demo user-post-section\">\r\n                        <UserPost totalposts = {posts}/>\r\n                        <div className=\"post-heading\"s style = {{textAlign:'center'}}>\r\n                            <h2>User Posts</h2>\r\n                        </div>\r\n                        <Post posts = {currentPosts} loading= {loading} />\r\n                        <Pagination postsPerPage={postsPerPage} totalPosts={posts.length} paginate= {paginate}/>\r\n                    </Col>\r\n                    <Col lg = {3} className = \"demo\">\r\n                        <ProfileInformation/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Footer/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-up\\signup.js",["358","359"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\n\r\n\r\n\r\n\r\nfunction SignUp(props) {\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:8080/users/register',values)\r\n        .then((res)=>{console.log(res.data)})\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       // onSubmitProps.resetForm()\r\n        \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n            is:val => (val && val.length > 0 ? true : false),\r\n            then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"confirmpassword\" className = \"text-light form-label\">Confirm Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.confirmpassword}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.confirmpassword && formik.touched.confirmpassword ? <div className = \"error\"><p>{formik.errors.confirmpassword}</p></div> : null}\r\n                                    </div>\r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in image\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\sign-in\\signin.js",["360","361"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\teams-section\\team.js",["362"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\footer-section\\footer.js",["363"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["364","365"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\post-component\\post.js",["366"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["367","368"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React, {useState, useEffect, useRef} from 'react'\r\nimport Cookies from 'js-cookie'\r\nimport axios from 'axios'\r\n\r\nimport './UserInformation.css'\r\n\r\nfunction UserInformation() {\r\n    const user = Cookies.get('user')\r\n    const [User,setUser] = useState({})\r\n    useEffect(()=>{\r\n            async function getUserInfo(){\r\n            const UserInformation =  await axios.get(`http://localhost:8080/users/${user}`)\r\n            setUser(UserInformation.data)\r\n        }\r\n        getUserInfo()\r\n        \r\n    }, [])\r\n    return (\r\n        <div className = \"user-information-section\">\r\n            <div className =\"user-information-heading\"> \r\n                <h3>User Information</h3>\r\n            </div>\r\n            <div className=\"user-information-display\">\r\n                <ul>\r\n                    <li><FontAwesomeIcon icon = {faUser} className = \"icon\"/>Name: <pre> {User.firstname} {User.lastname}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Username:<pre> {User.username}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faEnvelope} className = \"icon\"/>Email:<pre> {User.emailid}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faCalendar} className = \"icon\"/>DOB:<pre> 23-08-1997</pre></li>\r\n                   \r\n                </ul>\r\n            </div>\r\n            <div className=\"edit-btn\">\r\n                <button>Edit Profile Information</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\create-post\\create-post.js",["369","370"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comment.js",["371"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\components\\comments\\comments-display.js",["372","373","374","375"],"D:\\FYP-Implementation\\40% Implementation\\03\\frontend\\src\\pages\\GroupPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\index.js",[],["376","377"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\App.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserHomePage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\UserProfile.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\homepage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-in\\signin.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\sign-up\\signup.js",["378"],"import React, {useState} from 'react'\r\nimport './signup.css'\r\nimport {useHistory} from 'react-router-dom'\r\nimport NavigationBar from '../../components/navigation-bar/navbar'\r\nimport Footer from '../../components/footer-section/footer'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './signup.css'\r\nimport { useFormik } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport {toast} from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction SignUp(props) {\r\n    //Toast setting\r\n    toast.configure()\r\n    const signedUp = ()=>{\r\n        toast.success('User sign up successful!',{\r\n        });\r\n    }\r\n\r\n    const [redirect, setRedirect] = useState(false)\r\n\r\n    const initialValues = {\r\n        firstname: '',\r\n        lastname: '',\r\n        emailid: '',\r\n        username: '',\r\n        password:'',\r\n        dob:'',\r\n        chatId:\"AddChatIDWhenImplementingSockets\"\r\n        \r\n    }\r\n    const onSubmit =( values, onSubmitProps)=>{\r\n        // setRedirect(true);\r\n        axios.post('http://localhost:8080/users/register',values)\r\n        .then((res)=>{\r\n            signedUp()\r\n            console.log(values)\r\n        })\r\n        .catch(err =>{ console.log('Error: '+err)});\r\n       onSubmitProps.resetForm()\r\n      \r\n    }\r\n    let history = useHistory();\r\n    function redirectUser(){\r\n        if(redirect){\r\n            history.push('/sign-in');\r\n        }\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        firstname: Yup.string().required('This field is required..'),\r\n        lastname: Yup.string().required('This field is required..'),\r\n        emailid: Yup.string().email('Enter a valid email address..').required('This field is required..'),\r\n        username: Yup.string().required('This field is required..'),\r\n        password: Yup.string().required('This field is required..'),\r\n        dob: Yup.string().required('This field is required..'),\r\n        // confirmpassword: Yup.string().required('This field is required..').when(\"password\", {\r\n        //     is:val => (val && val.length > 0 ? true : false),\r\n        //     then : Yup.string().oneOf([Yup.ref(\"password\")], \"Value must match the entered password..\")\r\n        // })\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n     return (\r\n        <div className = \"main-body\">\r\n            <NavigationBar/>\r\n                <div className=\"container signin-container\">\r\n                    <div className=\"row signin-row\">\r\n                        <div className=\"col-sm-8\" style = {{padding: '0'}}>\r\n                            <div className=\"signup-form-section signup\">\r\n                                <form onSubmit = {formik.handleSubmit}>\r\n                                    <h3 className=\"text-light text-center\">\r\n                                        Sign Up For Your Account!\r\n                                    </h3>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"firstname\" className = \"text-light form-label\">First Name:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"firstname\" id=\"firstname\" className = \"form-controller\"\r\n                                            placeholder =\"Enter first name..\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.firstname}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.firstname && formik.touched.firstname ? <div className = \"error\"><p>{formik.errors.firstname}</p></div> : null}\r\n                                        </div>\r\n\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"lastname\" className = \"text-light form-label\">Last Name:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"text\" name=\"lastname\" id=\"lastname\" placeholder =\"Enter last name..\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.lastname}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.lastname && formik.touched.lastname ? <div className = \"error\"><p>{formik.errors.lastname}</p></div> : null}\r\n                                    </div>\r\n                                    </div>\r\n                                    <div className=\"row section-divider\">\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"emailid\" className = \"text-light form-label\">Email ID:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"email\" name=\"emailid\" id=\"emailid\" placeholder =\"yourname@example.com\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.emailid}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.emailid && formik.touched.emailid ? <div className = \"error\"><p>{formik.errors.emailid}</p></div> : null}\r\n                                        </div>\r\n                                        <div className=\"col-lg-2 text-light\">\r\n                                            <label htmlFor=\"username\" className = \"text-light form-label\">Username:</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-4 form-fields\">\r\n                                            <input type=\"text\" name=\"username\" id=\"username\" placeholder =\"example123\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.username}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.username && formik.touched.username ? <div className = \"error\"><p>{formik.errors.username}</p></div> : null}\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div className=\"row section-divider\">\r\n                                    <div className=\"col-lg-2 text-light\">\r\n                                        <label htmlFor=\"pasword\" className = \"text-light form-label\">Enter Password:</label>\r\n                                    </div>\r\n                                    <div className=\"col-lg-4 form-fields\">\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className = \"form-controller\"\r\n                                        onChange = {formik.handleChange}\r\n                                        value = {formik.values.password}\r\n                                        onBlur = {formik.handleBlur}\r\n                                        />\r\n                                        {formik.errors.password && formik.touched.password ? <div className = \"error\"><p>{formik.errors.password}</p></div> : null}\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"row section-divider dob\">\r\n                                        <div className=\"col-lg-4 text-light\">\r\n                                            <label htmlFor=\"date\" className=\"text-light form-label dob-label\">Select DOB</label>\r\n                                        </div>\r\n                                        <div className=\"col-lg-8 form-fields dob\">\r\n                                            <input type=\"date\" name=\"dob\" id=\"dob\" className = \"form-controller\"\r\n                                            onChange = {formik.handleChange}\r\n                                            value = {formik.values.dob}\r\n                                            onBlur = {formik.handleBlur}\r\n                                            />\r\n                                            {formik.errors.dob && formik.touched.dob ? <div className = \"error\"><p>{formik.errors.dob}</p></div> : null}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"login-btn\">\r\n                                        <button type = \"submit\" className = \"btn btn-danger\" onClick = {redirectUser()}>Submit</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-sm-4 signup\">\r\n                        <img src=\"/images/signup.svg\" alt=\"sign in\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUp","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\userNavbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\navigation-bar\\navbar.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\footer-section\\footer.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\post.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\post-component\\pagination.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\ProfileInformation.js",["379","380","381"],"import React,{useState,useEffect} from 'react'\r\nimport '../../pages/UserProfile.css'\r\nimport {FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faThumbsUp, faUsers, faTasks} from '@fortawesome/free-solid-svg-icons'\r\nimport {Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {Tabs, Tab} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction ProfileInformation() {\r\n    const [followers, setFollowers] = useState([])\r\n    const [following, setFollowing] = useState([])\r\n    const [posts, setPosts] = useState([])\r\n\r\n    const userid = localStorage.getItem('userid')\r\n    useEffect(()=>{\r\n        //Get user posts\r\n        axios.post('http://localhost:8080/posts/user/posts', {author: localStorage.getItem('username')})\r\n        .then(posts=> {\r\n            // console.log(posts)\r\n            setPosts(posts)\r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n        //get following\r\n        axios.get(`http://localhost:8080/users/${userid}/following`)\r\n        .then(res=> {\r\n            setFollowing(res.data)\r\n        })\r\n        .catch(err=> console.log(err))\r\n\r\n        //Get followers\r\n        axios.get(`http://localhost:8080/users/${userid}/followers`)\r\n        .then(res=> {\r\n            setFollowers(res.data)\r\n        })\r\n        .catch(err=> console.log(err))\r\n    },[])\r\n\r\n   \r\n\r\n    return (\r\n        <div className=\"user-info\">\r\n            <div className=\"user-heading\"> \r\n                <h3>Profile Information</h3>\r\n            </div>\r\n            <div className=\"information-section\">\r\n                <ul>\r\n                    <li><Link><FontAwesomeIcon icon = {faEdit} className = \"icon\"/>Posts {(posts.length)}</Link></li>\r\n                    <li><Link><FontAwesomeIcon icon = {faThumbsUp} className = \"icon\"/>Likes </Link></li>\r\n                </ul>\r\n                <div className=\"followers-following-section\">\r\n                    <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n                        <Tab eventKey=\"home\" title=\"Followers\">\r\n                        <ol style = {{color:\"white\"}} className = \"follower-section\">\r\n                        {followers.map(f=>(\r\n                            <li><Link>{f.firstname} {f.lastname}</Link></li>\r\n                        ))}\r\n                    </ol>\r\n                        \r\n                        </Tab>\r\n                        <Tab eventKey=\"profile\" title=\"Following\">\r\n                            <ol style = {{color:\"white\"}} >\r\n                                {following.map(f=>(\r\n                                    <li><Link>{f.firstname} {f.lastname}</Link></li>\r\n                                ))}\r\n                            </ol>\r\n                        </Tab>\r\n                    </Tabs>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\Profile-Information\\UserInformation.js",["382"],"import { faUser, faEnvelope, faCalendar, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {Modal, Button} from 'react-bootstrap'\r\nimport React, {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport moment from 'moment'\r\nimport './UserInformation.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\n\r\n\r\nfunction UserInformation() {\r\n    const user = localStorage.getItem('userid')\r\n    const [User,setUser] = useState({})\r\n\r\n    //Show hide modal\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    useEffect(()=>{\r\n            async function getUserInfo(){\r\n            const UserInformation =  await axios.get(`http://localhost:8080/users/${user}`)\r\n            setUser(UserInformation.data)\r\n        }\r\n        getUserInfo()\r\n        \r\n    }, [])\r\n\r\n\r\n    //Edit user information\r\n\r\n    const initialValues = {\r\n        firstname:User.firstname,\r\n        lastname:User.lastname,\r\n        username:User.username,\r\n        emailid:User.emailid,\r\n        dob:User.dob\r\n    }\r\n    // console.log(initialValues)\r\n    const onSubmit = (values)=>{\r\n        // axios.post(`http://localhost:8080/users/${user}/update`, values)\r\n        // .then(response=> console.log(response))\r\n        // .catch(err=> console.log(err))\r\n        // console.log(values)\r\n        //console.log(values)\r\n    }\r\n    const validationSchema = Yup.object({\r\n       firstname:Yup.string().required(\"First name is required...\"),\r\n       lastname:Yup.string().required(\"Last name is required...\"),\r\n       username:Yup.string().required(\"Username is required...\"),\r\n       emailid : Yup.string().required('Email id is required...'),\r\n       dob: Yup.date().required(\"DOB is required\")\r\n    })\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    })\r\n\r\n   // console.log(formik.values)\r\n    return (\r\n        <div className = \"user-information-section\">\r\n            <div className =\"user-information-heading\"> \r\n                <h3>User Information</h3>\r\n            </div>\r\n            <div className=\"user-information-display\">\r\n                <ul>\r\n                    <li><FontAwesomeIcon icon = {faUser} className = \"icon\"/>Name: <pre> {User.firstname} {User.lastname}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faUsers} className = \"icon\"/>Username:<pre> {User.username}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faEnvelope} className = \"icon\"/>Email:<pre> {User.emailid}</pre></li>\r\n                    <li><FontAwesomeIcon icon = {faCalendar} className = \"icon\"/>DOB:<pre> {moment(User.dob).format(\"MMMM DD YYYY\")}</pre></li>\r\n                   \r\n                </ul>\r\n            </div>\r\n\r\n\r\n            \r\n            <Modal show={show} onHide={handleClose} className = \"modal-user-update\">\r\n                <Modal.Header closeButton>\r\n                <Modal.Title >UPDATE USER INFORMATION</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit = {formik.handleSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"firstname\">First Name: </label>\r\n                            <input \r\n                            type=\"text\" name = \"firstname\"\r\n                            className = \"form-control\" id = \"firstname\" \r\n                            placeholder = \"Enter the firstname..\"\r\n                            value = {formik.values.firstname}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                             />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"lastname\">Last Name: </label>\r\n                            <input type=\"text\" name = \"lastname\"\r\n                            className = \"form-control\" id = \"lastname\" \r\n                            placeholder = \"Enter the lastname..\" \r\n                            value = {formik.values.lastname}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"username\"> Username: </label>\r\n                            <input type=\"text\" name = \"username\"\r\n                            className = \"form-control\" id = \"username\"\r\n                            placeholder = \"Enter the username..\" \r\n                            value = {formik.values.username}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email\">Email ID: </label>\r\n                            <input type=\"email\" name = \"emailid\"\r\n                            className = \"form-control\" id = \"email\" \r\n                            value = {`${formik.values.emailid}`}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"dob\">Date of Birth: </label>\r\n                            <input type=\"date\" name = \"dob\"\r\n                            className = \"form-control\" \r\n                            id = \"dob\" \r\n                            value = {formik.values.dob}\r\n                            onChange = {formik.handleChange}\r\n                            onBlur = {formik.handleBlur}\r\n                            />\r\n                        </div>\r\n                        <input type=\"text\" name=\"teext\" id=\"\" value = \"name\"/>\r\n                        <Button type = \"submit\" variant = \"danger\">\r\n                            save changes\r\n                        </Button>\r\n                    </form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={handleClose}>\r\n                    Close\r\n                </Button>\r\n                </Modal.Footer>\r\n               \r\n            </Modal>\r\n\r\n            <div className=\"edit-btn\">\r\n                <button onClick = {handleShow}>Edit Profile Information</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInformation\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\create-post\\create-post.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\description-section\\HeroSection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\teams-section\\team.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\contact-us-section\\contact-us.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comment.js",["383"],"import React from 'react'\r\nimport {Formik, useFormik} from 'formik'\r\nimport * as Yup from 'yup'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nfunction PostComment({postid}) {\r\n    const initialValues = {\r\n        username: localStorage.getItem('username'),\r\n        body: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        body: Yup.string().required('This field is required..')\r\n    })\r\n\r\n   \r\n    const onSubmit = (values, onSubmitProps) =>{\r\n         axios.post(`http://localhost:8080/posts/${postid}/comment/add`,values)\r\n         .then(res => {\r\n             console.log(res.data)\r\n             window.alert('Comment Added!');\r\n             window.location.reload(false);\r\n\r\n         })\r\n         .catch(err => console.log(err))\r\n        onSubmitProps.resetForm()\r\n    }\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit,\r\n        validationSchema\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className =\"container\" style ={{borderTop:\"1px solid white\", padding: \"15px 0\"}}>\r\n            <form onSubmit = {formik.handleSubmit}>\r\n                    <label htmlFor=\"comment\">Add a comment: </label>\r\n                    <input type=\"text\" className = \"form-control comment-input\" name = \"body\" id = \"body\"\r\n                    value = {formik.values.body} \r\n                    onChange = {formik.handleChange}\r\n                    onBlur = {formik.handleBlur}\r\n                    />\r\n                    {formik.errors.body && formik.touched.body ? <div ><p style = {{color: 'crimson'}}>{formik.errors.body}</p></div> : null}\r\n                    <div className=\"comment-btn\" style = {{marginTop:\"8px\"}}>\r\n                        <button className = \"btn btn-danger\" type = 'submit'>Comment</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostComment\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\comments\\comments-display.js",["384"],"import React from 'react'\r\nimport moment from 'moment'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './comment.css'\r\nimport './comment.css'\r\nfunction DisplayComments(props) {\r\n    \r\n    return (\r\n        <div className = \"display-comments container\">\r\n           <h4 style = {{color:\"black\" ,padding:\"5px\"}}>Comments: </h4>\r\n                {\r\n                    props.comments.length > 0 ? (props.comments.map(comment=>(\r\n                        <div className=\"comment\" key ={comment._id}>\r\n                        <div className=\"comment-side\">\r\n                            <pre><strong>{comment.username}:</strong> </pre>\r\n                            <p> {comment.body}</p>\r\n\r\n                        </div>\r\n                        <div className=\"created-side\">\r\n                            <pre><strong>Created: </strong> {moment(comment.createdAt).fromNow()}</pre>\r\n                        </div>\r\n             </div>\r\n                    ))) : <div>No Comments yet..</div>\r\n                }\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayComments\r\n\r\n{/*useEffect(async()=>{\r\n    try{\r\n        if(props.comments.length > 0){\r\n            setComments(props.comments)\r\n        }\r\n    }catch(err){\r\n\r\n    }\r\n        \r\n    //     if(props.postid){\r\n    //         const response =await Axios.get(`http://localhost:8080/posts/${props.postid}/comments`)\r\n    //         response.then(res=> {\r\n    //         setComments(res.data)\r\n    //     }).catch(err=> console.log(err))\r\n    //     }else{\r\n            \r\n    //     }  \r\n    // }catch(err){\r\n    //     console.log(err)\r\n    // }\r\n    \r\n},[])*/}","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\YT-Data-API-Result.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Search.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\YoutubeSearchPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\YT-Data\\Api.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\postPage.js",["385"],"import React, {useState,useEffect} from 'react'\r\nimport NavigationBar from '../components/navigation-bar/userNavbar'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Tippy from '@tippy.js/react'\r\nimport { faThumbsUp, faComment, faShare, faSave, faTrash,faEdit,faArchive } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport PostComment from '../components/comments/comment'\r\nimport DisplayComments from '../components/comments/comments-display'\r\nimport {Button} from 'react-bootstrap'\r\nimport axios from 'axios'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport '../components/post-component/post.css'\r\nimport 'tippy.js/dist/tippy.css'\r\n\r\nfunction PostPage(props) {\r\n  // console.log(props.match.params.id)\r\n  const [post,setPost] = useState({})\r\n  const [comments,setComments] = useState([])\r\n  useEffect(()=>{\r\n      axios.get(`http://localhost:8080/posts/post/${props.match.params.id}`)\r\n      .then(res=> {\r\n        setPost(res.data)\r\n        setComments(res.data.comments)\r\n      })\r\n      .catch(err=> console.log(err))\r\n  },[])\r\n    return (\r\n        <div>\r\n            <NavigationBar/>\r\n            <Button variant = \"danger\">\r\n            <Link to = \"/Home\"\r\n             style = {{textDecoration:\"none\",color:\"white\"}}>\r\n             Go back</Link>\r\n             </Button>\r\n            <div className=\"container-fluid posts-section\">\r\n                    <div className=\"post-container container\">\r\n                      <div className=\"row user-info-row\">\r\n                        <div className=\"col-md-6\">\r\n                           <span className = \"user-heading\">User: {post.author}</span> \r\n                        </div>\r\n                        <div className=\"col-md-6 created-at\">\r\n                            <pre><strong>Created: {moment(post.createdAt).fromNow()}</strong> </pre>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\" style = {{justifyContent:\"space-between\"}}>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"post-heading-section\">\r\n                                <h4>{post.title}</h4>\r\n                            </div>\r\n                        </div> \r\n                        <div className=\"co-md-4\">\r\n                        <div className=\"delete-icons-row\">\r\n                            <Link ><FontAwesomeIcon  icon = {faTrash}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faEdit}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faArchive}/></Link>\r\n                    </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <div className=\"post-body\">\r\n                                <p>{post.body}</p>\r\n                            </div>\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"row\">\r\n                        <div className=\"col-md-6 like-icons-row\">\r\n                           <Tippy content = \"1\"><Link><FontAwesomeIcon icon = {faThumbsUp}/></Link></Tippy>\r\n                           <Tippy content = \"1\"><Link><FontAwesomeIcon icon = {faComment}/></Link></Tippy>\r\n                            <Link><FontAwesomeIcon icon = {faShare}/></Link>\r\n                            <Link><FontAwesomeIcon icon = {faSave}/></Link>\r\n                        </div>\r\n                        \r\n                      </div>\r\n                      \r\n                    </div>\r\n        </div>\r\n        <div className=\"display-postcomments\">\r\n          <DisplayComments comments = {comments}/>\r\n        </div>\r\n        <div className=\"post-comments\" style = {{color:\"white\"}}>\r\n          <PostComment postid = {post._id} />   \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\user-search-component\\userSearch.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\groupsDisplayHome.js",["386","387"],"import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport './groupsDisplayHome.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nfunction GroupsDisplay() {\r\n    const userid = localStorage.getItem('userid')\r\n    const [groups,setGroups] = React.useState([])\r\n    React.useEffect(async() => {\r\n        try{\r\n            const response =await axios.get(`http://localhost:8080/users/${userid}/groups`)\r\n            setGroups(response.data)\r\n        }catch(Err){\r\n            console.log(Err)\r\n        }\r\n        \r\n    }, [])\r\n    return (\r\n        <div style = {{color:\"white\"}} className  = \"groups-main-container container\">\r\n            <div className=\"main-heading\">\r\n                <h4>Your Groups</h4>\r\n                {groups.length > 0 ? (\r\n                    groups.map((g,i)=>(\r\n                        <div className = \"text-crimson\"><Link to = {`/group/${g._id}`}>{`${i+1}) ${g.title}`}</Link></div>\r\n                    ))\r\n                ) : <div className = \"text-crimson\">You have not joined any groups yet</div> }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupsDisplay\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\groupComponent\\GroupPage.js",["388","389","390","391"],"import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nfunction GroupPage({match}) {\r\n    const gid = match.params.id\r\n    const [posts,setPosts] = useState([])\r\n    useEffect(()=>{\r\n        const response = axios.post()\r\n    })\r\n    return (\r\n        <div style = {{color:\"white\"}}>\r\n            Hello Jee this is a group\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupPage\r\n","D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\userSearch\\searchPanel.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\messenger.js",["392","393"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\sidechat-panel.js",["394"],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\mainchat-area.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\pages\\editorPage.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\utils\\LoggedIn.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\HOC\\PrivateRoute.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\messenger\\message.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\outputsection.js",[],"D:\\FYP-Implementation\\40% Implementation\\Edunetwork\\EduNetwork-V2\\frontend\\src\\components\\editor-components\\videosection.js",[],{"ruleId":"395","replacedBy":"396"},{"ruleId":"397","replacedBy":"398"},{"ruleId":"399","severity":1,"message":"400","line":52,"column":38,"nodeType":"401","endLine":52,"endColumn":41},{"ruleId":"399","severity":1,"message":"402","line":7,"column":61,"nodeType":"401","endLine":7,"endColumn":73},{"ruleId":"403","severity":1,"message":"404","line":168,"column":25,"nodeType":"401","endLine":168,"endColumn":76},{"ruleId":"405","severity":1,"message":"406","line":1,"column":37,"nodeType":"407","messageId":"408","endLine":1,"endColumn":43},{"ruleId":"405","severity":1,"message":"409","line":1,"column":25,"nodeType":"407","messageId":"408","endLine":1,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":1,"column":35,"nodeType":"407","messageId":"408","endLine":1,"endColumn":41},{"ruleId":"405","severity":1,"message":"410","line":2,"column":9,"nodeType":"407","messageId":"408","endLine":2,"endColumn":15},{"ruleId":"405","severity":1,"message":"411","line":1,"column":8,"nodeType":"407","messageId":"408","endLine":1,"endColumn":17},{"ruleId":"395","replacedBy":"412"},{"ruleId":"397","replacedBy":"413"},{"ruleId":"405","severity":1,"message":"406","line":1,"column":37,"nodeType":"407","messageId":"408","endLine":1,"endColumn":43},{"ruleId":"405","severity":1,"message":"414","line":17,"column":22,"nodeType":"407","messageId":"408","endLine":17,"endColumn":33},{"ruleId":"403","severity":1,"message":"404","line":169,"column":25,"nodeType":"401","endLine":169,"endColumn":76},{"ruleId":"405","severity":1,"message":"415","line":16,"column":11,"nodeType":"407","messageId":"408","endLine":16,"endColumn":15},{"ruleId":"405","severity":1,"message":"416","line":16,"column":16,"nodeType":"407","messageId":"408","endLine":16,"endColumn":23},{"ruleId":"399","severity":1,"message":"400","line":52,"column":38,"nodeType":"401","endLine":52,"endColumn":41},{"ruleId":"399","severity":1,"message":"402","line":7,"column":61,"nodeType":"401","endLine":7,"endColumn":73},{"ruleId":"405","severity":1,"message":"417","line":4,"column":39,"nodeType":"407","messageId":"408","endLine":4,"endColumn":46},{"ruleId":"405","severity":1,"message":"418","line":6,"column":8,"nodeType":"407","messageId":"408","endLine":6,"endColumn":15},{"ruleId":"405","severity":1,"message":"419","line":16,"column":19,"nodeType":"407","messageId":"408","endLine":16,"endColumn":27},{"ruleId":"405","severity":1,"message":"406","line":3,"column":37,"nodeType":"407","messageId":"408","endLine":3,"endColumn":43},{"ruleId":"420","severity":1,"message":"421","line":19,"column":8,"nodeType":"422","endLine":19,"endColumn":10,"suggestions":"423"},{"ruleId":"405","severity":1,"message":"409","line":1,"column":25,"nodeType":"407","messageId":"408","endLine":1,"endColumn":34},{"ruleId":"405","severity":1,"message":"406","line":1,"column":35,"nodeType":"407","messageId":"408","endLine":1,"endColumn":41},{"ruleId":"405","severity":1,"message":"410","line":2,"column":9,"nodeType":"407","messageId":"408","endLine":2,"endColumn":15},{"ruleId":"405","severity":1,"message":"411","line":1,"column":8,"nodeType":"407","messageId":"408","endLine":1,"endColumn":17},{"ruleId":"405","severity":1,"message":"424","line":2,"column":8,"nodeType":"407","messageId":"408","endLine":2,"endColumn":13},{"ruleId":"405","severity":1,"message":"425","line":3,"column":16,"nodeType":"407","messageId":"408","endLine":3,"endColumn":24},{"ruleId":"405","severity":1,"message":"426","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":14},{"ruleId":"395","replacedBy":"427"},{"ruleId":"397","replacedBy":"428"},{"ruleId":"405","severity":1,"message":"414","line":22,"column":22,"nodeType":"407","messageId":"408","endLine":22,"endColumn":33},{"ruleId":"405","severity":1,"message":"429","line":4,"column":30,"nodeType":"407","messageId":"408","endLine":4,"endColumn":37},{"ruleId":"405","severity":1,"message":"417","line":4,"column":39,"nodeType":"407","messageId":"408","endLine":4,"endColumn":46},{"ruleId":"420","severity":1,"message":"430","line":38,"column":7,"nodeType":"422","endLine":38,"endColumn":9,"suggestions":"431"},{"ruleId":"420","severity":1,"message":"421","line":31,"column":8,"nodeType":"422","endLine":31,"endColumn":10,"suggestions":"432"},{"ruleId":"405","severity":1,"message":"410","line":2,"column":9,"nodeType":"407","messageId":"408","endLine":2,"endColumn":15},{"ruleId":"433","severity":1,"message":"434","line":32,"column":1,"nodeType":"435","messageId":"436","endLine":53,"endColumn":9},{"ruleId":"420","severity":1,"message":"437","line":28,"column":5,"nodeType":"422","endLine":28,"endColumn":7,"suggestions":"438"},{"ruleId":"420","severity":1,"message":"439","line":11,"column":21,"nodeType":"440","endLine":19,"endColumn":6},{"ruleId":"420","severity":1,"message":"441","line":19,"column":8,"nodeType":"422","endLine":19,"endColumn":10,"suggestions":"442"},{"ruleId":"405","severity":1,"message":"443","line":5,"column":11,"nodeType":"407","messageId":"408","endLine":5,"endColumn":14},{"ruleId":"405","severity":1,"message":"444","line":6,"column":12,"nodeType":"407","messageId":"408","endLine":6,"endColumn":17},{"ruleId":"405","severity":1,"message":"445","line":6,"column":18,"nodeType":"407","messageId":"408","endLine":6,"endColumn":26},{"ruleId":"405","severity":1,"message":"446","line":8,"column":15,"nodeType":"407","messageId":"408","endLine":8,"endColumn":23},{"ruleId":"420","severity":1,"message":"439","line":10,"column":15,"nodeType":"440","endLine":20,"endColumn":6},{"ruleId":"420","severity":1,"message":"447","line":20,"column":7,"nodeType":"422","endLine":20,"endColumn":9,"suggestions":"448"},{"ruleId":"420","severity":1,"message":"449","line":11,"column":8,"nodeType":"422","endLine":11,"endColumn":10,"suggestions":"450"},"no-native-reassign",["451"],"no-negated-in-lhs",["452"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Formik' is defined but never used.","'userEvent' is defined but never used.",["451"],["452"],"'setRedirect' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'faTasks' is defined but never used.","'Cookies' is defined but never used.","'setLiked' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["453"],"'Axios' is defined but never used.","'useState' is defined but never used.","'moment' is defined but never used.",["451"],["452"],"'faUsers' is defined but never used.","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["454"],["455"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["456"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["457"],"'gid' is assigned a value but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["458"],"React Hook useEffect has a missing dependency: 'props.chats'. Either include it or remove the dependency array. If 'setChats' needs the current value of 'props.chats', you can also switch to useReducer instead of useState and read 'props.chats' in the reducer.",["459"],"no-global-assign","no-unsafe-negation",{"desc":"460","fix":"461"},{"desc":"462","fix":"463"},{"desc":"460","fix":"464"},{"desc":"465","fix":"466"},{"desc":"462","fix":"467"},{"desc":"468","fix":"469"},{"desc":"470","fix":"471"},"Update the dependencies array to be: [user]",{"range":"472","text":"473"},"Update the dependencies array to be: [userid]",{"range":"474","text":"475"},{"range":"476","text":"473"},"Update the dependencies array to be: [props.match.params.id]",{"range":"477","text":"478"},{"range":"479","text":"475"},"Update the dependencies array to be: [uid]",{"range":"480","text":"481"},"Update the dependencies array to be: [props.chats]",{"range":"482","text":"483"},[673,675],"[user]",[1350,1352],"[userid]",[998,1000],[1130,1132],"[props.match.params.id]",[567,569],[730,732],"[uid]",[349,351],"[props.chats]"]